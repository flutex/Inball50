#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        lang1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <19 20>;
            layers = <0>;
        };

        lang2 {
            bindings = <&kp LANG2>;
            key-positions = <17 16>;
            layers = <0>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <7 8>;
            layers = <1>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <8 9>;
            layers = <1>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <22 21>;
            layers = <1>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <20 21>;
            layers = <1>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <33 34>;
            layers = <1>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <34 35>;
            layers = <1>;
        };

        left_crlick {
            bindings = <&mkp LCLK>;
            key-positions = <20 21>;
            layers = <0>;
        };

        right_click {
            bindings = <&mkp RCLK>;
            key-positions = <21 22>;
            layers = <0>;
        };

        middle_click {
            bindings = <&mkp MCLK>;
            key-positions = <21 8>;
            layers = <0>;
        };

        mute {
            bindings = <&kp K_MUTE>;
            key-positions = <18 31>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC         &kp Q         &kp W         &kp E  &kp R           &kp T                                 &kp Y        &kp U             &kp I            &kp O                 &kp P          &kp SLASH
&kp TAB         &kp A         &kp S         &kp D  &kp F           &kp G                 &kp LEFT_WIN    &kp H        &kp J             &kp K            &kp L                 &kp BACKSPACE  &kp MINUS
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C  &kp V           &kp B                 &mo 3           &kp N        &kp M             &mt RCTRL COMMA  &mt RIGHT_ALT PERIOD  &kp UP_ARROW   &kp LCTRL
&kp LCTRL       &kp LEFT_GUI  &kp LEFT_ALT         &kp LANGUAGE_2  &lt 1 SPACE  &kp TAB  &kp LEFT_SHIFT  &lt 2 ENTER  &lt 4 LANGUAGE_1                   &kp LEFT              &kp DOWN       &kp RIGHT
            >;
        };

        layer_1 {
            bindings = <
&none  &kp SEMICOLON  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                         &kp BACKSLASH      &kp N7        &kp N8        &kp N9        &kp LS(SQT)    &none
&none  &kp COLON      &kp DOLLAR     &kp PERCENT   &kp CARET             &kp DOUBLE_QUOTES                      &none  &kp LEFT_BRACKET   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp BACKSPACE  &kp TILDE
&none  &none          &kp EXCL       &kp AT_SIGN   &kp HASH              &kp QUESTION                           &none  &kp RIGHT_BRACKET  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none          &none
&none  &none          &none                        &none                 &none                  &kp KP_NUMLOCK  &none  &kp N0             &none                       &none         &none          &none
            >;
        };

        layer_2 {
            bindings = <
&none  &kp LC(Q)  &kp LC(W)  &kp LC(E)  &kp LC(R)  &kp LC(T)                            &kp LS(LC(TAB))  &kp LC(TAB)     &mkp MCLK       &mkp MB4         &mkp MB5  &none
&none  &kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &kp LC(G)         &kp C_VOLUME_UP    &kp PAGE_UP      &mkp LCLK       &kp UP_ARROW    &mkp RCLK        &kp DEL   &none
&none  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)         &kp C_VOLUME_DOWN  &kp PAGE_DOWN    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none     &none
&none  &none      &none                 &none      &none      &none  &none              &none            &none                           &none            &none     &none
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none                &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&none  &none  &none  &none  &none  &none         &none  &sys_reset    &bootloader   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &none
&none  &none  &none  &none  &none  &none         &none  &none         &none         &none           &none         &none           &none
&none  &none  &none         &none  &none  &none  &none  &none         &none                         &none         &none           &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5                  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &kp F11  &kp F12  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans   &trans   &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans   &trans           &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans   &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };
    };
};
