#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC         &kp Q         &kp W         &kp E  &kp R  &kp T                    &kp Y      &kp U  &kp I  &kp O  &kp P          &none
&kp TAB         &kp A         &kp S         &kp D  &kp F  &kp G             &none  &kp H      &kp J  &kp K  &none  &kp BACKSPACE  &none
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C  &kp V  &kp B             &none  &kp N      &kp M  &none  &none  &none          &none
&kp LCTRL       &kp LEFT_GUI  &kp LEFT_ALT         &none  &kp SPACE  &none  &none  &kp ENTER  &none         &none  &none          &none
            >;
        };

        layer_1 {
            bindings = <
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none  &none
&none  &none  &none         &none  &none  &none  &none  &none  &none         &none  &none  &none
            >;
        };

        layer_2 {
            bindings = <
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none  &none
&none  &none  &none         &none  &none  &none  &none  &none  &none         &none  &none  &none
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none  &none
&none  &none  &none         &none  &none  &none  &none  &none  &none         &none  &none  &none
            >;
        };
    };
};
